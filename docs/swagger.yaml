definitions:
  param.AddLaptopRequest:
    properties:
      laptop_id:
        type: integer
      user_id:
        type: integer
    type: object
  param.AddLaptopResponse:
    properties:
      success:
        type: boolean
    type: object
  param.LaptopInfo:
    properties:
      company:
        type: string
      cpu:
        type: string
      created_at:
        type: string
      graphic:
        type: integer
      hdd:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      price:
        type: string
      ram:
        type: integer
      redirect_url:
        type: string
      screen_size:
        type: string
      ssd:
        type: integer
    type: object
  param.LaptopsResponse:
    properties:
      laptops:
        items:
          $ref: '#/definitions/param.LaptopInfo'
        type: array
    type: object
  param.LoginRequest:
    properties:
      password:
        type: string
      phone_number:
        type: string
    type: object
  param.LoginResponse:
    properties:
      token:
        $ref: '#/definitions/param.Tokens'
      user:
        $ref: '#/definitions/param.UserInfo'
    type: object
  param.ProfileResponse:
    properties:
      Info:
        $ref: '#/definitions/param.UserInfo'
    type: object
  param.RegisterRequest:
    properties:
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: integer
    type: object
  param.RegisterResponse:
    properties:
      user:
        $ref: '#/definitions/param.UserInfo'
    type: object
  param.RemoveFavoriteLaptopRequest:
    properties:
      laptop_id:
        type: integer
      user_id:
        type: integer
    type: object
  param.RemoveFavoriteLaptopResponse:
    properties:
      success:
        type: boolean
    type: object
  param.SearchInfo:
    properties:
      company:
        type: string
      cpu:
        type: string
      graphic:
        type: integer
      hdd:
        type: integer
      ram:
        type: integer
      screen_size:
        type: string
      ssd:
        type: integer
    type: object
  param.SearchRequest:
    properties:
      id:
        type: integer
      laptop:
        $ref: '#/definitions/param.SearchInfo'
    type: object
  param.SearchResponse:
    properties:
      result:
        items:
          type: integer
        type: array
      success:
        type: boolean
    type: object
  param.SellerLaptopRequest:
    properties:
      company:
        type: string
      cpu:
        type: string
      graphic:
        type: integer
      hdd:
        type: integer
      image_url:
        type: string
      price:
        type: string
      ram:
        type: integer
      redirect_url:
        type: string
      screen_size:
        type: string
      ssd:
        type: integer
      user_id:
        type: integer
    type: object
  param.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  param.UpdateLaptopRequest:
    properties:
      company:
        type: string
      cpu:
        type: string
      created_at:
        type: string
      graphic:
        type: integer
      hdd:
        type: integer
      id:
        type: integer
      price:
        type: string
      ram:
        type: integer
      redirect_url:
        type: string
      screen_size:
        type: string
      ssd:
        type: integer
    type: object
  param.UpdateUserRequest:
    properties:
      id:
        type: integer
      password:
        type: string
      phone_number:
        type: string
      user_name:
        type: string
    type: object
  param.UpdateUserResponse:
    properties:
      success:
        type: boolean
    type: object
  param.UserInfo:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
    type: object
info:
  contact: {}
  title: Laptop Recommender system
  version: "1.0"
paths:
  /backoffice/laptops:
    get:
      consumes:
      - application/json
      description: Retrieve a list of laptops
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of laptops
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
      security:
      - BearerAuth: []
      summary: List laptops
      tags:
      - backoffice
  /backoffice/laptops/{laptop_id}:
    delete:
      consumes:
      - application/json
      description: Delete a laptop by ID
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the laptop to be deleted
        in: path
        name: laptop_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Laptop not found
          schema: {}
      security:
      - BearerAuth: []
      summary: Delete laptop
      tags:
      - backoffice
  /sellerGroup/laptops/:
    get:
      consumes:
      - application/json
      description: Retrieve the list of laptops associated with the authenticated
        seller.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/param.LaptopsResponse'
        "400":
          description: Bad Request
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get laptops for a seller
      tags:
      - sellers
    post:
      consumes:
      - application/json
      description: Allows a seller to add a new laptop to their inventory.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Laptop details to be added
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/param.SellerLaptopRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/param.SellerLaptopRequest'
        "400":
          description: Bad Request
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Add a new laptop for a seller
      tags:
      - sellers
    put:
      consumes:
      - application/json
      description: Allows a seller to update details of a laptop in their inventory.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Updated laptop details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/param.UpdateLaptopRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update a laptop for a seller
      tags:
      - sellers
  /sellerGroup/laptops/{laptop_id}:
    delete:
      consumes:
      - application/json
      description: Allows a seller to remove a laptop from their inventory.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Laptop ID
        format: int64
        in: path
        name: laptop_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Remove a laptop for a seller
      tags:
      - sellers
  /sellerGroup/upload/:
    post:
      consumes:
      - multipart/form-data
      description: Allows a seller to upload an image for their inventory.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Image file to be uploaded
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Upload an image
      tags:
      - sellers
  /userGroup/laptop/{laptop_id}:
    get:
      consumes:
      - application/json
      description: Retrieve information about a laptop using its ID.
      parameters:
      - description: Laptop ID
        format: int64
        in: path
        name: laptop_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema: {}
        "400":
          description: Bad Request
          schema: {}
      summary: Get laptop details by ID
      tags:
      - laptops
  /users/:
    put:
      consumes:
      - application/json
      description: Update user information with the provided details
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User update information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/param.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user
          schema:
            $ref: '#/definitions/param.UpdateUserResponse'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "404":
          description: User not found
          schema: {}
      summary: Update user information
      tags:
      - users
  /users/laptops/favorites:
    get:
      consumes:
      - application/json
      description: Retrieve the list of laptops marked as favorites by the authenticated
        user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of favorite laptops
          schema: {}
        "400":
          description: Bad Request
          schema: {}
      summary: Get user's favorite laptops
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add a laptop to the user's favorites list
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Laptop information to add to favorites
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/param.AddLaptopRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added laptop to favorites
          schema:
            $ref: '#/definitions/param.AddLaptopResponse'
        "400":
          description: Bad Request
          schema: {}
      summary: Add a laptop to favorites
      tags:
      - users
  /users/laptops/favorites/{laptop_id}:
    delete:
      consumes:
      - application/json
      description: Remove a laptop from the user's favorites list
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the laptop to be removed from favorites
        in: path
        name: laptop_id
        required: true
        type: integer
      - description: Request parameters for removing a laptop from favorites
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/param.RemoveFavoriteLaptopRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully removed laptop from favorites
          schema:
            $ref: '#/definitions/param.RemoveFavoriteLaptopResponse'
        "400":
          description: Bad Request
          schema: {}
      summary: Remove laptop from favorites
      tags:
      - users
  /users/laptops/search:
    post:
      consumes:
      - application/json
      description: Perform a search for laptops based on the provided criteria
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search criteria for laptops
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/param.SearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Search results for laptops
          schema:
            $ref: '#/definitions/param.SearchResponse'
        "400":
          description: Bad Request
          schema: {}
      summary: Search for laptops
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login with the provided credentials
      parameters:
      - description: User login information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/param.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: '#/definitions/param.LoginResponse'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
      summary: User login
      tags:
      - users
  /users/profile:
    get:
      consumes:
      - application/json
      description: Retrieve the profile information of the authenticated user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User profile information
          schema:
            $ref: '#/definitions/param.ProfileResponse'
        "401":
          description: Unauthorized
          schema: {}
      summary: Get user profile
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided information
      parameters:
      - description: User registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/param.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered
          schema:
            $ref: '#/definitions/param.RegisterResponse'
        "400":
          description: Bad Request
          schema: {}
      summary: Register a new user
      tags:
      - users
swagger: "2.0"
